[JLScript]
Version=1
Name=\x421\x43a\x440\x438\x43f\x442\x31
Notes=
Encrypted=false
LogRowsCount=20
Data="//========== * \x41e\x431\x449\x438\x435 \x43f\x43e\x43b\x44c\x437\x43e\x432\x430\x442\x435\x43b\x44c\x441\x43a\x438\x435 \x43d\x430\x441\x442\x440\x43e\x439\x43a\x438 \x441\x442\x440\x430\x442\x435\x433\x438\x438 * ===//   \nvar Deposit = 10.0;\t// \x420\x430\x437\x43c\x435\x440 \x434\x435\x43f\x43e\x437\x438\x442\x430, \x43a\x43e\x442\x43e\x440\x44b\x439 \x434\x430\x435\x43c \x431\x43e\x442\x443 \x434\x43b\x44f \x442\x43e\x440\x433\x43e\x432\x43b\x438\nvar ProfitSize = 0.4;\t// \x41f\x440\x43e\x444\x438\x442, \x43a\x43e\x442\x43e\x440\x44b\x439 \x445\x43e\x442\x438\x43c \x43f\x43e\x43b\x443\x447\x438\x442\x44c \x43e\x442 \x441\x434\x435\x43b\x43a\x438\nvar Spreading = 10;\t// \x41f\x43e\x43a\x430 \x447\x442\x43e \x43d\x435 \x440\x430\x431\x43e\x442\x430\x435\x442. \x420\x430\x441\x43f\x440\x435\x434\x435\x43b\x435\x43d\x438\x435 \x43f\x440\x43e\x444\x438\x442\x430 \x432 \x444\x438\x430\x442\x43d\x443\x44e \x438\x43b\x438 \x43a\x440\x438\x43f\x442\x43e\x432\x430\x43b\x44e\x442\x43d\x443\x44e \x447\x430\x441\x442\x438 \x434\x435\x43f\x43e \x432 %\t\nvar Trading = 'long';\t// \x41f\x43e\x43a\x430 \x447\x442\x43e \x43d\x435 \x440\x430\x431\x43e\x442\x430\x435\x442. \x412\x438\x434 \x442\x43e\x440\x433\x43e\x432. long - \x43d\x430 \x43f\x43e\x432\x44b\x448\x435\x43d\x438\x435 \x446\x435\x43d\x44b, short - \x43d\x430 \x43f\x43e\x43d\x438\x436\x435\x43d\x438\x435 \x446\x435\x43d\x44b, mix - \x441\x43c\x435\x448\x430\x43d\x44b\x439 \x440\x435\x436\x438\x43c\nvar SoundOn = true;\t// \x41f\x440\x438 \x443\x441\x442\x430\x43d\x43e\x432\x43a\x435 \x432 true \x441\x442\x440\x430\x442\x435\x433\x438\x44f \x431\x443\x434\x435\x442 \x438\x437\x434\x430\x432\x430\x442\x44c \x437\x432\x443\x43a\x438 \x43f\x440\x438 \x43f\x43e\x43a\x443\x43f\x43a\x435 \x438 \x43f\x440\x43e\x434\x430\x436\x435\t\n//========== * \x41d\x430\x441\x442\x440\x439\x43e\x43a\x438 \x441\x435\x442\x43a\x438 \x43e\x440\x434\x435\x440\x43e\x432 * ================//\t\nvar OrdersAmnt = 5;\t// \x41c\x430\x43a\x441\x438\x43c\x430\x43b\x44c\x43d\x43e\x435 \x43a\x43e\x43b\x438\x447\x435\x441\x442\x432\x43e \x43e\x440\x434\x435\x440\x43e\x432 \x43d\x430 \x43f\x43e\x43a\x443\x43f\x43a\x443. \x428\x430\x433 \x43c\x435\x436\x434\x443 \x43e\x440\x434\x435\x440\x430\x43c\x438 \x431\x443\x434\x435\x442 \x440\x430\x441\x447\x438\x442\x430\x43d \x43a\x430\x43a \x448\x438\x440\x438\x43d\x430 \x43a\x43e\x440\x438\x434\x43e\x440\x430 \x434\x435\x43b\x435\x43d\x43d\x430\x44f \x43d\x430 \x44d\x442\x43e\x442 \x43f\x430\x440\x430\x43c\x435\x442\x440.\nvar DeltaStepOrder = 0.0;\t// \x423\x432\x435\x43b\x438\x447\x435\x43d\x438\x435 \x440\x430\x437\x43c\x435\x440\x430 \x448\x430\x433\x430 \x43e\x440\x434\x435\x440\x43e\x432 \x43f\x440\x438 \x43f\x440\x438\x431\x43b\x438\x436\x435\x43d\x438\x438 \x43a \x43e\x441\x43d\x43e\x432\x430\x43d\x438\x44e \x441\x435\x442\x43a\x438 \x432 %\nvar OrderMode = 1;\t// \x420\x435\x436\x438\x43c \x430\x432\x442\x43e\x43d\x430\x441\x442\x440\x43e\x439\x43a\x438 \x43e\x440\x434\x435\x440\x43e\x432. 0 - \x432\x440\x443\x447\x43d\x443\x44e, 1 - \x43f\x43e \x432\x440\x435\x43c\x435\x43d\x438 \x43e\x442 \x442\x435\x43a\x443\x449\x435\x439 \x446\x435\x43d\x44b, 2 - \x43f\x43e max/min \x441\x443\x442\x43e\x447\x43d\x43e\x439 \x446\x435\x43d\x435.\nvar PercMaxPrice = 3;\t// \x412\x435\x440\x445\x43d\x438\x439 \x443\x440\x43e\x432\x435\x43d\x44c \x446\x435\x43d\x43e\x432\x43e\x433\x43e \x43a\x43e\x440\x438\x434\x43e\x440\x430 \x43e\x442\x43d\x43e\x441\x438\x442\x435\x43b\x44c\x43d\x43e \x442\x435\x43a\x443\x449\x435\x439 \x446\x435\x43d\x44b (\x434\x43b\x44f \x440\x435\x436\x438\x43c\x430 1) \x438\x43b\x438 \x441\x443\x442\x43e\x447\x43d\x43e\x433\x43e \x43c\x430\x43a\x441\x438\x43c\x443\x43c\x430 (\x434\x43b\x44f \x440\x435\x436\x438\x43c\x430 2) \x432 %.\nvar PercMinPrice = 3;\t// \x41d\x438\x436\x43d\x438\x439 \x443\x440\x43e\x432\x435\x43d\x44c \x446\x435\x43d\x43e\x432\x43e\x433\x43e \x43a\x43e\x440\x438\x434\x43e\x440\x430 \x43e\x442\x43d\x43e\x441\x438\x442\x435\x43b\x44c\x43d\x43e \x442\x435\x43a\x443\x449\x435\x439 \x446\x435\x43d\x44b (\x434\x43b\x44f \x440\x435\x436\x438\x43c\x430 1) \x438\x43b\x438 \x441\x443\x442\x43e\x447\x43d\x43e\x433\x43e \x43c\x430\x43a\x441\x438\x43c\x443\x43c\x430 (\x434\x43b\x44f \x440\x435\x436\x438\x43c\x430 2) \x432 %.\nvar ManualMax = 40;\t// \x41c\x430\x43a\x441\x438\x43c\x430\x43b\x44c\x43d\x430\x44f \x446\x435\x43d\x430 \x434\x43b\x44f \x440\x443\x447\x43d\x43e\x433\x43e \x440\x435\x436\x438\x43c\x430\nvar ManualMin = 25;\t// \x41c\x438\x43d\x438\x43c\x430\x43b\x44c\x43d\x430\x447 \x446\x435\x43d\x430 \x434\x43b\x44f \x440\x443\x447\x43d\x43e\x433\x43e \x440\x435\x436\x438\x43c\x430\nvar WaitRebuild = 30;\t// \x412\x440\x435\x43c\x44f \x43f\x440\x43e\x441\x442\x43e\x44f \x431\x43e\x442\x430 \x431\x435\x437 \x442\x43e\x440\x433\x43e\x432 \x432 \x43c\x438\x43d\x443\x442\x430\x445, \x43f\x43e\x441\x43b\x435 \x43a\x43e\x442\x43e\x440\x43e\x433\x43e \x431\x443\x434\x435\x442 \x43f\x435\x440\x435\x441\x447\x438\x442\x430\x43d\x430 \x441\x435\x442\x43a\x430\nvar StopLoss = 0;\t// \x415\x441\x43b\x438 \x43a\x443\x440\x441 \x431\x443\x434\x435\x442 \x43d\x438\x436\x435 \x43d\x430 \x44d\x442\x443 \x432\x435\x43b\x438\x447\x438\x43d\x443 \x447\x435\x43c \x446\x435\x43d\x430 \x437\x430\x43a\x443\x43f\x43a\x438 \x432 \x43f\x430\x440\x442\x438\x438 \x43f\x430\x440\x442\x438\x44f \x431\x443\x434\x435\x442 \x441\x43b\x438\x442\x430 \x432 \x43c\x438\x43d\x443\x441. \x423\x441\x442\x430\x43d\x43e\x432\x438\x442\x44c \x440\x430\x432\x43d\x44b\x43c 0 \x447\x442\x43e\x431\x44b \x43d\x435 \x438\x441\x43f\x43e\x43b\x44c\x437\x43e\x432\x430\x442\x44c \x441\x43b\x438\x432 \x432 \x43c\x438\x43d\x443\x441.\n\n//=========== * \x414\x430\x43b\x44c\x448\x435 \x442\x43e\x43b\x44c\x43a\x43e \x434\x43b\x44f \x441\x43b\x443\x436\x435\x431\x43d\x43e\x433\x43e \x438\x441\x43f\x43e\x43b\x44c\x437\x43e\x432\x430\x43d\x438\x44f * =//\nvar sVer = '1.3';\nvar limit= 0.01;\nvar botMinLim1 = 0; // \x43c\x438\x43d\x438\x43c\x430\x43b\x44c\x43d\x44b\x439 \x43e\x431\x44a\x435\x43c \x43f\x43e\x43a\x443\x43f\x43a\x438 \x43e\x433\x440\x430\x43d\x438\x447\x435\x43d \x442\x43e\x43b\x44c\x43a\x43e \x43f\x435\x440\x435\x43c\x435\x43d\x43d\x43e\x439 limit\nvar botSafeLim2 = 1; // \x420\x430\x437\x43c\x435\x440 \x441\x43a\x43e\x43b\x44c\x43a\x43e \x43e\x441\x442\x430\x432\x438\x442\x44c \x432 \x43b\x44e\x431\x43e\x43c \x441\x43b\x443\x447\x430\x435 \x43d\x430 \x434\x435\x43f\x43e\x437\x438\x442\x435 ???\nvar SetOrderDelay = 1;\nvar WaitToSetOrder = 1;\n\n//=========== * \x41d\x435\x43f\x43e\x43d\x44f\x442\x43d\x44b\x435 \x43f\x435\x440\x435\x43c\x435\x43d\x43d\x44b\x435 * ===============//\nvar botSafeLim2 = 0;\n\nvar TradeControl = {\n\tbuyFlag : false,\n\tsellFlag :  false,\n\tbuyOrders : 0,\n\tsellOrders : 0,\n\tcurrentBuy : 0,\n\tcurrentSell : 0,\n\tdeleteID : ''\n}\n\nvar RCanBuy = false;\nvar RAmntBuy = 0.0;\nvar RPriceBuy = 0.0;\n\nvar RCanSell = false;\nvar RAmntSell = 0.0;\nvar RPriceSell = 0.0;\n\n\nvar cancelAllOrders = false;\nvar SetLastOrder = new Date();\nvar MaxPrice = 0;\nvar MinPrice = 0;\nvar BuildMaze = new Date();\nvar void1 = 0;\nvar BuyPart = 0;\nvar BuySize = 0;\nvar Base = 0;\n\nfunction MinutesBetween(date1,date2) {\n    trader.log(date1);\n    trader.log(date2);\n    return  Math.round((((date1 - date2) % 86400000) % 3600000) / 60000);\n}\n\nfunction SecondsBetween(date1,date2) {\n    trader.log(date1);\n    trader.log(date2);\n    return  Math.round(((((date1 - date2) % 86400000) % 3600000) % 60000) / 1000);\n}\n\n\nfunction DataInitialize() {\n  trader.log('DataInitialize');\n  SetLastOrder = new Date();\n  TradeControl.buyFlag = false;\n  TradeControl.sellFlag = false;\n  TradeControl.deleteID = '';\n\n  if (Trading == 'long') {\n\tTradeControl.currentBuy = OrdersAmnt;\n\tTradeControl.currentSell = 0;\n  }\n  if (Trading == 'short') {\n\tTradeControl.currentSell = OrdersAmnt;\n\tTradeControl.currentBuy = 0;\t\n  }\n\n  BuildMaze.getDate();\n  switch (OrderMode) {\n  case 0: \n\tMaxPrice = ManualMax;\n\tMinPrice = ManualMin;\n\tbreak;\n  case 1:\n\tMaxPrice = trader.get(\"AskPrice\")*(1+PercMaxPrice/100);\n\tMinPrice = trader.get(\"BidPrice\")/(1+PercMinPrice/100);\n\tbreak;\n  case 2:\n\tMaxPrice = trader.get(\"HighPrice\")*(1+PercMaxPrice/100);\n\tMinPrice = trader.get(\"LowPrice\")/(1+PercMinPrice/100);\n\tbreak;\n  }\n}\n\nfunction GetOrdersCurr(iType) {\nvar i = 0;\nvar result = 0;\nif (trader.get(\"OpenOrdersCount\")>0) {\n\tfor (var i = 0; i < trader.get(\"OpenOrdersCount\"); i++) {\n\t\tif (trader.get(\"OpenOrderType\",i) == iType) {\n\t\t\tresult = result + trader.get(\"OpenOrderVolume\",i)*trader.get(\"OpenOrderPrice\",i);\n\t\t}\n\t}\n}\nreturn result;\n}\n\nfunction GetOrdersCntType(iType) {\nvar i = 0;\nvar result = 0;\nif (trader.get(\"OpenOrdersCount\")>0) {\n\tfor (var i = 0; i < trader.get(\"OpenOrdersCount\"); i++) {\n\t\tif (trader.get(\"OpenOrderType\",i) == iType) {\n\t\t\tresult = result + 1;\n\t\t}\n\t}\n}\nreturn result;\n}\n\n\nfunction GetPartiesAmount() {\nvar allamnt = 0;\nvar i = 0;\nfor (var i = 0; i < trader.get(\"HistoryOrdersCount\"); i++) {\n\tallamnt = allamnt + trader.get(\"HistoryOrderVolume\",i);\n\tif (Math.abs(allamnt - trader.get(\"Balance\",\"LTC\")) < 0.00000001) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n}\n\nfunction GetHistoryTotal() {\nvar allamnt = 0;\nvar i = 0;\nfor (var i = 0; i < trader.get(\"HistoryOrdersCount\"); i++) { \n\tallamnt = allamnt + trader.get(\"HistoryOrderVolume\",i)*trader.get(\"HistoryOrderPrice\",i);\n}\nreturn allamnt;\n}\n\nfunction funcCanBuy() {\nvar sum = 0;\n\nRCanBuy = false;\nswitch (Trading) {\n case 'long': { if (TradeControl.currentBuy > 0) {\n\ttrader.log('currentBuy > 0');\n\tif ( SecondsBetween(new Date(), SetLastOrder) > SetOrderDelay) {\n\t\ttrader.log('SetLastOrder >> ', SetOrderDelay);\n\t\tif (!TradeControl.buyFlag) {\n\t\t\tsum = 0;\n\t\t\tfor (var i = 0; i < TradeControl.currentBuy; i++) {\n\t\t\t\t sum = sum+((MaxPrice-MinPrice)/Base)*Math.pow((1+DeltaStepOrder/100), i);\n\t\t\t}\n\t\t\tRPriceBuy = MaxPrice - sum;\n\t\t\tTradeControl.currentBuy--;\n\t\t\tfor (var i = 0; i < trader.get(\"HistoryOrdersCount\"); i++) { // \x43a\x43e\x43b\x438\x447\x435\x441\x442\x432\x43e \x441\x43e\x432\x435\x440\x448\x435\x43d\x43d\x44b\x445 \x441\x434\x435\x43b\x43e\x43a?\n\t\t\t\t if ((RPriceBuy >= trader.get(\"HistoryOrderPrice\",i)/void1) && (RPriceBuy <= trader.get(\"HistoryOrderPrice\",i)*void1) && (trader.get(\"HistoryOrderVolume\",i) > BuySize/(2*RPriceBuy))) {\n\t\t\t\t\treturn false; //\x43f\x43e\x43a\x430 \x43d\x438\x447\x435\x433\x43e \x43d\x435 \x434\x435\x43b\x430\x435\x43c\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i = 0; i < trader.get(\"OpenOrdersCount\"); i++) { // \x41a\x43e\x43b\x438\x447\x435\x441\x442\x432\x43e \x43e\x442\x43a\x440\x44b\x442\x44b\x445 \x43e\x440\x434\x435\x440\x43e\x432\n\t\t\t\t if ((trader.get(\"OpenOrderType\",i) == 0) && (RPriceBuy >= trader.get(\"OpenOrderPrice\",i)/void1) && (RPriceBuy <= trader.get(\"OpenOrderPrice\",i)*void1)) { // \x43f\x43e\x43a\x443\x43f\x43a\x430\n\t\t\t\t\treturn false; //\x43f\x43e\x43a\x430 \x43d\x435 \x43f\x43e\x43d\x44f\x442\x43d\x43e \x447\x442\x43e \x434\x435\x43b\x430\x435\x43c\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ttrader.log('SetLastOrder << ', SetOrderDelay);\n\t\t\tif (TradeControl.buyOrders == GetOrdersCntType(true)-1) {\n\t\t\t\tTradeControl.buyFlag = false;\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tif  ((TradeControl.buyOrders == trader.get(\"OpenAsksCount\")) && (MinutesBetween(new Date(), SetLastOrder) > WaitToSetOrder)) {\n\t\t\t\t\tsum = 0;\n\t\t\t\t\tfor (var i = 0; i < TradeControl.currentBuy+1; i++) {\n\t\t\t\t\t\tsum = sum+((MaxPrice-MinPrice)/Base)*Math.pow((1+DeltaStepOrder/100), i);\n\t\t\t\t\t}\n\t\t\t\t\tRPriceBuy = MaxPrice - sum;\n\t\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t}\n\t\ttrader.log(\"RPriceBuy = \", RPriceBuy);\n\n\t\tif  ((Deposit - GetHistoryTotal()/(1-trader.get(\"Fee\")/100) - GetOrdersCurr(0)-botSafeLim2-limit) > BuySize) {\n\t\t\tRAmntBuy = BuySize/RPriceBuy;\t\n\t\t} else {\n\t\t\tRAmntBuy = ((Deposit-GetHistoryTotal()/(1-trader.get(\"Fee\")/100)-GetOrdersCurr(0)-botSafeLim2-limit))/RPriceBuy;\n\t\t}\n\n\t\ttrader.log(\"RAmntBuy = \", RAmntBuy);\n\t\t\n\t\tif (RAmntBuy > (trader.get(\"Balance\",\"USD\")-botSafeLim2-limit)/RPriceBuy) {\n\t\t\tRAmntBuy = (trader.get(\"Balance\",\"USD\")-botSafeLim2-limit)/RPriceBuy; \n\t\t\t      \n\t\t}\n\t\t\n\t\ttrader.log(\"RPriceBuy = \", RPriceBuy,\" \");\n\t\t\t\t\n\t\tif ((RPriceBuy <= trader.get(\"AskPrice\")) && (RAmntBuy >= botMinLim1+limit)) {\n\t\t\tRCanBuy = true;\n\t\t\tTradeControl.buyFlag = true;\n\t\t\tTradeControl.buyOrders = GetOrdersCntType(0);\n\t\t\tSetLastOrder = new Date();\n\n\t\t\ttrader.log(\"RCanBuy = true, TradeControl.buyFlag = true, TradeControl.buyOrders =\", TradeControl.buyOrders);\n\t\t}\t\t\n\t}\n\t} else {\n\t  trader.log('currentBuy = 0');\n\t   if ( MinutesBetween(new Date(),BuildMaze) > WaitRebuild) {\n\t\ttrader.log('MinutesBetween > WaitRebuild');\n\t\tcancelAllOrders = true;\n\t\tDataInitialize();\n\t\t}\t\n\tTradeControl.currentBuy = OrdersAmnt;\n\t}\n\tbreak;\n\t}\ncase 'short': { trader.log('Error: Bad Trading constant');\n\tbreak;\n\t}\ndefault:  trader.log('Error: Bad Trading constant');\n}\nif (RCanBuy) {\n\treturn true;\n} else {\n\treturn false;\n}\n}\n\nfunction funcCanSell(){\nvar sum = 0.0;\n\nRCanSell = false;\n\nswitch (Trading) {\n case 'long': { if (TradeControl.currentSell < GetPartiesCnt()) {\n\t\tif (GetPartiesAmount() && (SecondsBetween(new Date(), SetLastOrder) > SetOrderDelay)) {\n\t\t\tif  ((!TradeControl.sellFlag) || (TradeControl.sellFlag && (TradeControl.sellOrders == GetOrdersCntType(1)) && (MinutesBetween(new Date(), SetLastOrder) > WaitToSetOrder))) {\n\t\t\t\tif ((StopLoss != 0) && ((trader.get(\"HistoryOrderPrice\",TradeControl.currentSell)/trader.get(\"BidPrice\")) >= 1+StopLoss/100)) {  //\x432 \x431\x443\x434\x443\x449\x435\x43c \x434\x43e\x431\x430\x432\x438\x442\x44c \x435\x449\x435 \x43e\x434\x43d\x443 \x444\x443\x43d\x43a\x446\x438\x44e\n\t\t\t\t\t\t\t\t\t\t//OBCalcPriceIfSell(trader.get(\"HistoryOrderVolume\",TradeControl.currentSell)\n\t\t\t\t\tRPriceSell = trader.get(\"BidPrice\"); //OBCalcPriceIfSell(GetPartyAmnt(TradeControl.currentSell))\n\t\t\t\t} else {\n\t\t\t\t\tRPriceSell = GetPartyPrice(TradeControl.currentSell)*(1+(ProfitSize + 2*trader.get(\"Fee\"))/100); //\x412\x43e\x437\x43c\x43e\x436\x43d\x43e \x442\x43e\x436\x435 \x43f\x435\x440\x435\x43f\x438\x448\x443 \n\t\t\t\t\t\t\t\t\t\t//GetProfitPrice(GetPartyPrice(TradeControl.currentSell), ProfitSize);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (TradeControl.currentSell == GetPartiesCnt()-1) { \n\t\t\t\t\tRAmntSell = trader.get(\"HistoryOrderVolume\",TradeControl.currentSell) - botSafeLim1 - limit;\n\t\t\t\t} else {\n\t\t\t\t\tRAmntSell = trader.get(\"HistoryOrderVolume\",TradeControl.currentSell);\n\t\t\t\t}\n\n\t\t\t\tTradeControl.currentSell--;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < trader.get(\"OpenOrdersCount\"); i++) {\n\t\t\t\t\tif ((!trader.get(\"OpenOrderType\",i) == 0) && (RPriceSell >= trader.get(\"OpenOrderPrice\",i)/void1) && (RPriceSell <= trader.get(\"OpenOrderPrice\",i)*void1)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (RAmntSell > (Math.max(botMinLim1, botSafeLim1)+limit)) {\n\t\t\t\t\tRCanSell = true;\n\t\t\t\t\tTradeControl.sellFlag = true;\n\t\t\t\t\tTradeControl.sellOrders = GetOrdersCntType(1);\n\t\t\t\t\tSetLastOrder = new Date();\n\t\t\t\t}\t\n\t\t\t} else {\n\t\t\t\tif (TradeControl.sellOrders == GetOrdersCntType(1)-1) { TradeControl.sellFlag = false; }\n\t\t\t}\n\t\t}\n\t} else {\n\t\tTradeControl.currentSell = 0;\t\n\t}\n\tbreak;\n\t}\ncase 'short': { trader.log('Error: Bad Trading constant');\n\tbreak;\n\t}\ndefault:  trader.log('Error: Bad Trading constant');\n}\nif (RCanSell) { \n\treturn true;\n} else {\n\treturn false;\n}\n\n}\n\nBuyPart = 100/OrdersAmnt;\nBuySize = Deposit*BuyPart/100;\n\t\nBase = 0;\nfor (var i = 0; i < OrdersAmnt; i++) Base = Base+Math.pow((1+DeltaStepOrder/100), i);\n\nDataInitialize();\nvoid1 = 1+(MaxPrice-MinPrice)/(2*OrdersAmnt*MaxPrice);\ntrader.log('void1 = ',void1);\n\ntrader.on(\"Time\").changed()\n{\n\nif  (funcCanBuy()) { trader.buy(RAmntBuy,RPriceBuy); }\n\nif  (funcCanSell()) { trader.sell(RAmntSell,RPriceSell); } \n\n}\n\n\ntrader.on(\"MyLastTrade\").changed()\n{\n\tDataInitialize();\n}\n\n\n\n"
